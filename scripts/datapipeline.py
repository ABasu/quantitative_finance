#!/usr/bin/env python# encoding=utf8"""Abstraction layer for interfacing data -- either from CSV or database backend.All physical dependencies should be isolatable to this module and every other function should be able to call while being agnostic about the actual source of the data."""import datetime, logging, operator, os, reimport pandas as pdlogging.basicConfig(format = '%(funcName)s %(asctime)-25s %(message)s', level = logging.INFO)##############################################################################class DataPipeLineCSV(object):    """    Abstraction layer that handles CSV data.    """    def __init__(self, root_dir, sub_dir, suffix, extension='.csv'):        self.csv_dir = os.path.join(root_dir, '_'.join([sub_dir, suffix]))        self.extension = extension                logging.info('Initiating CSV data pipeline: {}.'.format(self.csv_dir))            def get_timeseries(self, ticker):        csv_file = os.path.join(self.csv_dir, ticker+self.extension)        df = pd.read_csv(csv_file)                return df